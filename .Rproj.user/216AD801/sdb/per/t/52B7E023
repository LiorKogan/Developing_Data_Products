{
    "contents" : "install.packages(\"shiny\")\nlibrary(shiny)\n\n# tutorial: http://rstudio.github.io/shiny/tutorial\n\n# ui.R     - controls how it looks\n# server.R - controls what it does\n\n\n\neval(parse(text=\"2+2\"))\neval(parse(text=\"x=3;y=x^2;y\"))\n\n\n# derivative\n# ======================\nD(expression(x^2), \"x\")\n# expression as string:\nD(parse(text=\"x^2\"), \"x\")\n# doesn't work for:\nD(expression(abs(x)), \"x\")\n\n# derivative at a point\n# ======================\ninstall.packages(\"numDeriv\")\nlibrary(numDeriv)\ngrad(function(x) { x^2 }, 4)\n# expression as string:\ngrad(function(x) { eval(parse(text=\"abs(x)\")) }, 0)\n\n\n# plotting a function\n# ======================\ncurve(abs(x), -5, 5)\n\n# expression as string:\ny <- function(x) {eval(parse(text=\"abs(x)\"))}\ncurve(y, -5, 5, n= 3000)\n\n# plotting a function using ggplot2\n# ======================\nlibrary(ggplot2)\n\ny <- function(x) {eval(parse(text=\"abs(x)\"))}\nggplot(data.frame(x=c(-5, 5)), aes(x)) + stat_function(fun = y, color = \"blue\", lwd = 2) + \n       geom_abline(intercept = 2, slope = 2 , color = \"red\") +\n\t   geom_point (x = 2, y = 2, color = \"green\")\n\n\n# plotting a function, return error code on error\n# ======================\ntryCatch( { curve(y, -5, 5, n= 3000); 1 }, error = function(cond) {return(100)}, warning = function(cond) {return(101)})\n\n\n# ======================\n# running app\nlibrary(shiny)\nrunApp()\n# or debug:\nrunApp(display.mode = 'showcase')\n\n\n# deploying app to https://www.shinyapps.io\nlibrary(shinyapps)\ndeployApp()\n\n\n",
    "created" : 1407483212285.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3210950955",
    "id" : "52B7E023",
    "lastKnownWriteTime" : 1407569371,
    "path" : "C:/My GitHub/Developing_Data_Products/Note.R",
    "project_path" : "Note.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}